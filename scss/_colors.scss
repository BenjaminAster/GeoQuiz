@use "sass:math";

@import "functions-mixins";

input#theme-toggle {
	&:not(:checked) ~ actual-content {
		--is-light: 0;
		label[for="theme-toggle"] {
			&::before {
				content: "ðŸŒ™\fe0e";
			}
		}
	}
	&:checked ~ actual-content {
		--is-light: 1;
		label[for="theme-toggle"] {
			&::before {
				content: "â˜€\fe0e";
			}
		}
	}
}

$fromDark: #000104;
$toDark: #fbfcff;

$fromLight: white;
$toLight: black;

actual-content {
	--is-light: 0;

	$hexList: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e, f);
	$max: length($hexList) - 1;

	@for $i from 0 through $max {
		$hexNum: nth($hexList, $i + 1);

		$darkCol: mix($toDark, $fromDark, math.div($i * 100%, $max));
		$lightCol: mix($toLight, $fromLight, math.div($i * 100%, $max));

		--col-#{$hexNum}: #{darkLight($darkCol, $lightCol)};

		@if ($i != $max) {
			$darkCol: mix($toDark, $fromDark, math.div(($i + 0.5) * 100%, $max));
			$lightCol: mix($toLight, $fromLight, math.div(($i + 0.5) * 100%, $max));

			--col-#{$hexNum}8: #{darkLight($darkCol, $lightCol)};
		}
	}

	--extr-bg: #{darkLight(black, white)};

	$blueDark: deepSkyBlue;
	$blueLight: dodgerBlue;
	--blue: #{darkLight($blueDark, $blueLight)};
	--blue-bg: #{darkLight(rgba($blueDark, 15%), rgba($blueLight, 15%))};

	$greenDark: springGreen;
	$greenLight: green;
	--green: #{darkLight($greenDark, $greenLight)};
	--green-bg: #{darkLight(rgba($greenDark, 15%), rgba($greenLight, 15%))};

	$redDark: red;
	$redLight: red;
	--red: #{darkLight($redDark, $redLight)};
	--red-bg: #{darkLight(rgba($redDark, 15%), rgba($redLight, 15%))};
}
