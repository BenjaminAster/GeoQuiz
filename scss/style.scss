@use "colors";
@use "global";
@use "icons";

@use "startScreen";
@use "game";
@use "endScreen";

@use "sass:math";

/*

sass scss:_ --watch

*/

body {
	&:not([_loaded]) {
		:is(main, footer) {
			display: none;
		}
	}

	&[_game-state="start"] {
		start-screen {
			display: block;
		}
	}

	&[_game-state="game"] {
		game {
			display: flex;
		}

		nav {
			display: none;
		}
	}

	&[_game-state="end"] {
		end-screen {
			display: flex;
		}
	}
}

titlebar {
	// z-index: 1;
	display: flex;
	align-items: center;
	gap: 0.5rem;
	padding-inline: 0.6rem;
	overflow: hidden;
	-webkit-app-region: drag;
	app-region: drag;
	position: fixed;
	inset-block-start: env(titlebar-area-y, 0);
	inset-inline-start: env(titlebar-area-x, 0);
	width: env(titlebar-area-width, 0);
	height: env(titlebar-area-height, 0);
	background-color: var(--col-18);
	user-select: none;

	button {
		-webkit-app-region: no-drag;
		app-region: no-drag;

		background: none;
		display: grid;
		place-items: center;
		height: 100%;
		aspect-ratio: 1;
		border: none {
			radius: 0.3rem;
		}
		padding: 0;
		font-size: env(titlebar-area-height) / 2;
		transition: background-color 0.3s;

		&:hover {
			background-color: var(--col-4);
		}
	}
}

nav {
	padding: 0.5rem;
	margin: 0.5rem;
	background-color: var(--green-bg);
	font-weight: bolder;
	display: flex;
	flex-wrap: wrap;
	$borderWidth: 4px;
	$gap: 12px;
	gap: $gap;
	border-radius: 1rem;

	& > * {
		&:not([hidden]) {
			display: grid;
		}
		padding: 0;
		aspect-ratio: 1/1;
		box-sizing: content-box;
		place-items: center;

		inline-size: 2.3rem;
		aspect-ratio: 1;

		font-size: 1.4rem;
		background-color: var(--green-bg);
		border: none {
			radius: 0.7rem;
		}
		color: var(--col-f);

		transition: background-color 0.3s, color 0.3s;

		&:hover {
			background-color: var(--green);
			color: var(--col-0);
		}

		&:not(:last-child) {
			position: relative;
			&::after {
				content: "";
				background-color: var(--green-bg);
				$verticalMargin: 0.35rem;
				margin: #{$verticalMargin} 0;
				block-size: calc(100% - #{$verticalMargin} * 2);
				inline-size: $borderWidth;
				border-radius: 1rem;
				position: absolute;
				inset-inline-end: 0;
				transform: translateX(#{math.div(($gap + $borderWidth), 2)});
			}
		}

		&[_action="toggleFullscreen"] {
			@media all and (display-mode: fullscreen) {
				disable-fullscreen {
					display: grid;
				}
			}
			@media not all and (display-mode: fullscreen) {
				enable-fullscreen {
					display: grid;
				}
			}
		}

		&[_action="openInApp"] {
			@media all and (display-mode: standalone) {
				display: none;
			}
		}
	}
}

main {
	flex-grow: 1;
	display: flex;
	flex-direction: column;
}

noscript {
	display: block;
	margin: 0.5rem;
	padding: 0.5rem 0.7rem;
	background-color: var(--red-bg);
	$borderWidth: 2px;
	color: #{darkLight(salmon, darkRed)};
	border: none {
		radius: 0.8rem;
	}
}

body {
	footer {
		background-color: var(--col-2);
		padding: 0.3rem;
		text-align: center;

		heart::before {
			/// circumvent insufficient color contrast
			content: "‚ù§";
			color: var(--red);
		}
	}

	&[_game-state="game"] {
		footer {
			position: absolute;
			inset-block-end: 0.7rem;
			padding-inline: 0.5em;
			inset-inline-start: 50%;
			transform: translateX(-50%);
			border-radius: 0.7rem;
			width: fit-content;
		}
	}
}
