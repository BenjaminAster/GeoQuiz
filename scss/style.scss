@use "colors";
@use "global";

@use "sass:math";

/*

sass scss:. --watch --style=compressed

*/

body {
	&:not([data-loaded]) {
		:is(main, footer) {
			display: none;
		}
	}

	&[data-game-state="start"] {
		start-screen {
			display: block;
		}
	}

	&[data-game-state="game"] {
		game {
			display: flex;
		}

		nav {
			display: none;
		}
	}
}

main {
	flex-grow: 1;
	display: flex;
	flex-direction: column;
}

start-screen {
	display: none;
	padding: 0.2rem 0.5rem;
	flex-grow: 1;

	& > * {
		&:not([hidden]) {
			display: flex;
		}
		flex-direction: column;
		gap: 1rem;
		margin-block-end: 0.8rem;
		background-color: var(--col-2);
		padding: 0.8rem;
		border-radius: 1rem;

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			color: var(--green);
		}
	}
}

nav {
	padding: 0.5rem;
	margin: 0.5rem;
	background-color: var(--green-bg);
	display: flex;
	flex-wrap: wrap;
	$borderWidth: 4px;
	$gap: 12px;
	gap: $gap;
	border-radius: 1rem;

	& > button {
		--mirror: 0;

		padding: 0;
		aspect-ratio: 1/1;
		box-sizing: content-box;
		display: grid;
		place-items: center;

		inline-size: 1.4em;
		block-size: 1.4em;

		font-size: 1.5rem;
		background-color: var(--green-bg);
		border: none {
			radius: 0.7rem;
		}
		color: var(--col-e);

		vertical-align: top;

		transition: background-color 0.2s, color 0.2s;

		&:hover {
			background-color: var(--green);
			color: var(--col-0);
		}

		&:not(:last-of-type) {
			position: relative;
			&::after {
				content: "";
				background-color: var(--green-bg);
				$verticalMargin: 0.35rem;
				margin: #{$verticalMargin} 0;
				block-size: calc(100% - #{$verticalMargin} * 2);
				inline-size: $borderWidth;
				border-radius: 1rem;
				position: absolute;
				inset-inline-end: 0;
				transform: translateX(#{math.div(($gap + $borderWidth), 2)});
			}
		}
	}
}

:is(mobile-warning, safari-warning) {
	&:is(mobile-warning) {
		@media (hover) {
			&:not([selector-specificity-was-a-bad-invention]) {
				display: none;
			}
		}
	}

	background-color: var(--red-bg);

	warning-sign {
		font-weight: normal;
		display: inline-block;
		block-size: 1.4em;
		inline-size: 1.4em;
		display: inline-grid;
		place-items: center;
		border-radius: 0.3em;
		background-color: var(--red-bg);
	}

	:is(warning-sign, h2) {
		color: var(--red);
	}
}

options-select {
	display: flex;
	gap: 0.5rem;
	flex-wrap: wrap;

	button {
		background-color: var(--col-28);
		color: var(--col-c);
		padding: 0.5rem;
		border: none {
			radius: 1rem;
		}
		padding: 0.8em 1em;

		transition: 0.2s background-color, 0.2s color;

		&.selected {
			background-color: var(--blue-bg);
			color: var(--blue);
		}
		&:not(.selected):hover {
			background-color: var(--col-3);
			color: var(--col-f);
		}
	}
}

continents {
	label.select-all {
		inline-size: fit-content;
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.5rem {
			inline-end: 0.8rem;
		}
		background-color: var(--col-28);
		accent-color: var(--blue);
		transition: 0.2s background-color, 0.2s border-color;
		border: none {
			radius: 1rem;
		}

		&:hover {
			background-color: var(--col-3);
		}

		input[type="checkbox"] {
			inline-size: 1.5em;
			block-size: 1.5em;
		}
	}

	button {
		padding: 0.8em 1em;
	}

	options-select {
		button {
			position: relative;
			&::before {
				transition: 0.2s background-color;
				content: "";
				position: absolute;
				inset: 0;
				inline-size: 100%;
				block-size: 100%;
				border-radius: inherit;
			}
		}
	}

	&.all-selected {
		label.select-all {
			background-color: var(--blue-bg);
		}

		options-select {
			button::before {
				background-color: var(--transparent-cover);
			}
		}
	}
}

languages {
	options-select {
		button {
			min-inline-size: 6rem;

			language-code {
				display: block;
				font-size: 2rem;
				font-weight: bold;
				// font-weight: 500;
			}
		}
	}
}

start-quiz {
	padding: 0;
	background-color: transparent;
	display: grid;
	place-items: center;
	button {
		padding: 0.8em 1em;
		background-color: var(--green);
		color: var(--col-0);
		inline-size: min(100%, 30rem);
		font-weight: bold;
		font-size: 1.2rem;
		border: none {
			radius: inherit;
		}
		transition: 0.2s background-color, 0.2s color;

		&:hover {
			background-color: var(--green-bg);
			color: var(--green);
		}
	}
}

game {
	display: none;
	flex-direction: column;
	flex-grow: 1;
	position: relative;
	user-select: none;

	:is(before-canvas, after-canvas) {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 0.5rem;
		place-items: center;
		min-block-size: 4rem;
		font-size: 2rem;
	}

	canvas-container {
		position: relative;

		flex-grow: 1;
		flex-direction: column;

		canvas {
			display: block;
			position: absolute;
			inline-size: 100%;
			block-size: 100%;
		}
	}
}

noscript {
	display: block;
	margin: 0.5rem;
	padding: 0.5rem 0.7rem;
	background-color: var(--red-bg);
	$borderWidth: 2px;
	color: #{darkLight(salmon, darkRed)};
	border: none {
		radius: 0.8rem;
	}
}

button.theme-toggler {
	label {
		display: grid;
		inline-size: 100%;
		block-size: 100%;
		place-items: center;
	}
}

footer {
	background-color: var(--col-2);
	padding: 0.3rem;
	text-align: center;
}
